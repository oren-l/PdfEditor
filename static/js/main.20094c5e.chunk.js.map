{"version":3,"sources":["PdfPlayground/Toolbar/Toolbar.module.css","PdfPlayground/PdfPlayground.module.css","PdfLoader/PdfLoader.module.css","PdfPlayground/PdfRenderer/PdfViewport.module.css","PdfLoader/PdfLoader.js","PdfPlayground/PdfRenderer/PdfDoc.js","PdfPlayground/PdfRenderer/PdfPage.js","PdfPlayground/PdfRenderer/PdfCanvas.js","PdfPlayground/PdfRenderer/PdfViewport.js","PdfPlayground/Toolbar/Toolbar.js","EscKeyHandler/EscKeyHandler.js","PdfPlayground/PdfPlayground.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","toolbar","scale","text","screenViewport","editorArea","pdfViewportArea","dropzone","inner","viewport","page","PdfLoader","onFilesChange","_callee","files","file","data","regenerator_default","a","wrap","_context","prev","next","console","log","arrayBuffer","sent","_this","props","onLoad","stop","onFilesError","error","warn","concat","react_default","createElement","className","styles","dist_default","onChange","this","onError","accepts","clickable","maxFiles","Component","loadDocument","pdfjs","getDocument","promise","PdfDoc","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","docObj","setState","prevProps","prevState","children","loadPage","doc","pageNum","getPage","PdfPage","pageObj","document","renderPdfToCanvas","canvasEl","getViewport","width","height","render","canvasContext","getContext","PdfCanvas","getMousePos","x","y","_canvas$getBoundingCl","canvasRef","current","getBoundingClientRect","left","top","React","createRef","_this$props","_this$props2","_this2","_this$props3","onClick","otherProps","objectWithoutProperties","Function","event","clientX","clientY","style","cursor","assign","ref","PdfViewport","_ref","PdfRenderer_PdfDoc","PdfRenderer_PdfPage","PdfRenderer_PdfCanvas","disabled","counter","onZoomChange","onDownload","runningLabelText","type","value","toFixed","EscKeyHandler","onKeyup","includes","key","addEventListener","removeEventListener","initialScale","initialCounter","PdfPlayground","showLoadDialog","drawRect","pdfDoc","pages","firstPage","_firstPage$getSize","modifiedPdfBytes","PDFDocument","load","getPages","getSize","drawSquare","size","borderWidth","borderColor","grayscale","color","rgb","save","drawText","_callee2","helveticaFont","_firstPage$getSize2","_context2","embedFont","StandardFonts","Helvetica","font","blob","Blob","saveAs","onPdfLoad","onOpenLoadDialog","amount","onCloseLoadDialog","isReload","src_EscKeyHandler_EscKeyHandler","Toolbar","src_PdfLoader_PdfLoader","PdfRenderer_PdfViewport","_ref3","App","src_PdfPlayground_PdfPlayground","Boolean","window","location","hostname","match","GlobalWorkerOptions","workerSrc","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.20094c5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__vOrCc\",\"scale\":\"Toolbar_scale__WaOdJ\",\"text\":\"Toolbar_text__1vsdt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenViewport\":\"PdfPlayground_screenViewport__3uFdw\",\"editorArea\":\"PdfPlayground_editorArea__1M_EA\",\"pdfViewportArea\":\"PdfPlayground_pdfViewportArea__2gzME\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzone\":\"PdfLoader_dropzone__2cNmo\",\"inner\":\"PdfLoader_inner__1fpRF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewport\":\"PdfViewport_viewport__3i-1V\",\"page\":\"PdfViewport_page__1djwU\"};","import React, { Component } from 'react'\nimport Files from 'react-files'\n\nimport styles from './PdfLoader.module.css'\n\nclass PdfLoader extends Component {\n  onFilesChange = async files => {\n    console.log('got request to load files:', files)\n    const file = files[0]\n    const data = await file.arrayBuffer()\n    console.log('data:', data)\n    this.props.onLoad(data)\n  }\n\n  onFilesError = (error, files) => {\n    console.warn(`error loading files ${files}. error:`, error)\n  }\n\n  render() {\n    return (\n      <div className={styles.dropzone}>\n        <Files\n          className={styles.inner}\n          onChange={this.onFilesChange}\n          onError={this.onFilesError}\n          accepts={['.pdf']}\n          clickable\n          maxFiles={1}\n        >\n          Drop a file here or click to upload\n        </Files>\n      </div>\n    )\n  }\n}\n\nexport default PdfLoader\n","import React, { Component } from 'react'\nimport pdfjs from '@bundled-es-modules/pdfjs-dist/build/pdf'\n\nfunction loadDocument(data) {\n  return pdfjs.getDocument(data).promise\n}\n\nclass PdfDoc extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      docObj: null,\n      data: props.data\n    }\n  }\n\n  async componentDidMount() {\n    const docObj = await loadDocument(this.props.data)\n    this.setState({\n      docObj\n    })\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    // will update state only when 'props.data' changes\n    if (this.props.data !== prevProps.data) {\n      console.log('[PdfDoc] updating doc object')\n\n      const docObj = await loadDocument(this.props.data)\n      this.setState({\n        docObj,\n        data: this.props.data\n      })\n    }\n  }\n\n  render() {\n    const { children } = this.props\n    return this.state.docObj !== null ? children(this.state.docObj) : null\n  }\n}\n\nexport default PdfDoc\n","import React, { Component } from 'react'\n\nfunction loadPage(doc, pageNum) {\n  return doc.getPage(pageNum)\n}\n\nclass PdfPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      pageObj: null\n    }\n  }\n\n  async componentDidMount() {\n    const { document, pageNum } = this.props\n    const pageObj = await loadPage(document, pageNum)\n    this.setState({\n      pageObj\n    })\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { document, pageNum } = this.props\n    // will update state only when one of the props changes\n    if (document !== prevProps.document || pageNum !== prevProps.pageNum) {\n      const pageObj = await loadPage(document, pageNum)\n      this.setState({\n        pageObj\n      })\n    }\n  }\n\n  render() {\n    const { children } = this.props\n    return this.state.pageObj !== null ? children(this.state.pageObj) : null\n  }\n}\n\nexport default PdfPage\n","import React, { Component } from 'react'\n\nfunction renderPdfToCanvas(canvasEl, page, scale) {\n  const viewport = page.getViewport({ scale })\n\n  canvasEl.width = viewport.width // canvas width and height must be according to viewport scale!\n  canvasEl.height = viewport.height\n\n  page.render({\n    canvasContext: canvasEl.getContext('2d'),\n    viewport\n  })\n}\n\nclass PdfCanvas extends Component {\n  constructor(props) {\n    super(props)\n    this.canvasRef = React.createRef()\n  }\n\n  componentDidMount() {\n    const { page, scale } = this.props\n    renderPdfToCanvas(this.canvasRef.current, page, scale)\n  }\n\n  componentDidUpdate() {\n    const { page, scale } = this.props\n    renderPdfToCanvas(this.canvasRef.current, page, scale)\n  }\n\n  // drawDot = event => {\n  //   const { x, y } = this.getMousePos(event.clientX, event.clientY)\n  //   const canvas = this.canvasRef.current\n  //   const ctx = canvas.getContext('2d')\n  //   ctx.fillRect(x, y, 2, 2)\n  // }\n\n  getMousePos = (x, y) => {\n    // get mouse position relative to canvas\n    const canvas = this.canvasRef.current\n    const { left, top } = canvas.getBoundingClientRect()\n    return {\n      x: x - left,\n      y: y - top\n    }\n  }\n\n  render() {\n    const { page, scale, onClick, ...otherProps } = this.props\n    if (onClick instanceof Function) {\n      otherProps.onClick = event => {\n        return this.props.onClick(\n          event,\n          this.getMousePos(event.clientX, event.clientY)\n        )\n      }\n    }\n    otherProps.style = otherProps.style || {}\n    otherProps.style.cursor = 'crosshair'\n    return <canvas ref={this.canvasRef} {...otherProps} />\n  }\n}\n\nexport default PdfCanvas\n","import React from 'react'\nimport PdfDoc from './PdfDoc'\nimport PdfPage from './PdfPage'\nimport PdfCanvas from './PdfCanvas'\n\nimport styles from './PdfViewport.module.css'\n\nfunction PdfViewport({\n  data,\n  pageNum,\n  scale,\n  className,\n  style,\n  ...otherProps\n}) {\n  return (\n    <div className={`${className} ${styles.viewport}`} style={style}>\n      <div className={styles.page}>\n        {data !== null ? (\n          <PdfDoc data={data}>\n            {doc => (\n              <PdfPage document={doc} pageNum={pageNum}>\n                {page => (\n                  <PdfCanvas page={page} scale={scale} {...otherProps} />\n                )}\n              </PdfPage>\n            )}\n          </PdfDoc>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default PdfViewport\n","import React from 'react'\n\nimport styles from './Toolbar.module.css'\n\nfunction toolbar({\n  disabled,\n  scale,\n  counter,\n  onZoomChange,\n  onDownload,\n  onLoad\n}) {\n  const runningLabelText = disabled ? null : (\n    <div className={styles.text}>\n      Place next running label: {`{${counter}}`}\n    </div>\n  )\n  return (\n    <div className={styles.toolbar}>\n      <div className={styles.scale}>\n        <button disabled={disabled} onClick={() => onZoomChange(+0.1)}>\n          +\n        </button>\n        <button disabled={disabled} onClick={() => onZoomChange(-0.1)}>\n          -\n        </button>\n        <input type=\"text\" disabled value={`${(scale * 100).toFixed(0)}%`} />\n      </div>\n\n      <button disabled={disabled} onClick={onLoad}>\n        Load\n      </button>\n      <button disabled={disabled} onClick={onDownload}>\n        Download\n      </button>\n      {runningLabelText}\n    </div>\n  )\n}\n\nexport default toolbar\n","import { Component } from 'react'\n\nclass EscKeyHandler extends Component {\n  componentDidMount() {\n    document.addEventListener('keyup', this.onKeyup, false)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.onKeyup, false)\n  }\n\n  onKeyup = event => {\n    if (['Escape', 'Esc'].includes(event.key)) {\n      this.props.onClick()\n    }\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport default EscKeyHandler\n","import React, { Component } from 'react'\nimport { degrees, PDFDocument, rgb, grayscale, StandardFonts } from 'pdf-lib'\nimport { saveAs } from 'file-saver'\n\nimport PdfLoader from '../PdfLoader/PdfLoader'\nimport PdfViewport from './PdfRenderer/PdfViewport'\nimport Toolbar from './Toolbar/Toolbar'\nimport EscKeyHandler from '../EscKeyHandler/EscKeyHandler'\n\nimport styles from './PdfPlayground.module.css'\n\nconst initialScale = 1\nconst initialCounter = 2\n\nclass PdfPlayground extends Component {\n  state = {\n    data: null,\n    scale: initialScale,\n    showLoadDialog: true,\n    counter: initialCounter\n  }\n\n  drawRect = async (x, y) => {\n    const pdfDoc = await PDFDocument.load(this.state.data)\n    const pages = pdfDoc.getPages()\n    const firstPage = pages[0]\n    const { height } = firstPage.getSize()\n\n    const size = 20\n    firstPage.drawSquare({\n      x: x / this.state.scale,\n      y: height - y / this.state.scale - size,\n      size,\n      borderWidth: 2,\n      borderColor: grayscale(0.5),\n      color: rgb(0.75, 0.2, 0.2)\n    })\n    const modifiedPdfBytes = await pdfDoc.save()\n    this.setState({\n      data: modifiedPdfBytes\n    })\n    console.log('modified loaded')\n  }\n\n  drawText = async (x, y) => {\n    const pdfDoc = await PDFDocument.load(this.state.data)\n    const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica)\n    const pages = pdfDoc.getPages()\n    const firstPage = pages[0]\n    const { height } = firstPage.getSize()\n    const size = 20\n\n    firstPage.drawText(`{${this.state.counter}}`, {\n      x: x / this.state.scale,\n      y: height - y / this.state.scale - size,\n      size,\n      font: helveticaFont,\n      color: rgb(0.95, 0.1, 0.1)\n      // rotate: degrees(-45)\n    })\n    const modifiedPdfBytes = await pdfDoc.save()\n    this.setState(state => ({\n      data: modifiedPdfBytes,\n      counter: state.counter + 1\n    }))\n    console.log('modified loaded')\n  }\n\n  onDownload = () => {\n    const blob = new Blob([this.state.data], { type: 'application/pdf' })\n    console.log('request to download file accepted', blob)\n    saveAs(blob, 'output.pdf')\n  }\n\n  onPdfLoad = data => {\n    this.setState({\n      data,\n      showLoadDialog: false,\n      scale: initialScale,\n      counter: initialCounter\n    })\n  }\n\n  onOpenLoadDialog = () => {\n    this.setState({\n      showLoadDialog: true\n    })\n  }\n\n  onZoomChange = amount => {\n    this.setState(state => ({\n      scale: state.scale + amount\n    }))\n  }\n\n  onCloseLoadDialog = () => {\n    this.setState({ showLoadDialog: false })\n  }\n\n  render() {\n    const isReload =\n      this.state.data !== null && this.state.showLoadDialog === true\n    return (\n      <div className={styles.screenViewport}>\n        {isReload ? <EscKeyHandler onClick={this.onCloseLoadDialog} /> : null}\n        <h1>PDF Playground</h1>\n\n        <div className={styles.editorArea}>\n          <Toolbar\n            disabled={this.state.data === null}\n            scale={this.state.scale}\n            counter={this.state.counter}\n            onZoomChange={this.onZoomChange}\n            onDownload={this.onDownload}\n            onLoad={this.onOpenLoadDialog}\n          />\n          <div className={styles.pdfViewportArea}>\n            {this.state.showLoadDialog ? (\n              <PdfLoader onLoad={this.onPdfLoad} />\n            ) : null}\n            <PdfViewport\n              data={this.state.data}\n              pageNum={1}\n              scale={this.state.scale}\n              onClick={(event, { x, y }) => this.drawText(x, y)}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PdfPlayground\n","import React from 'react'\nimport './App.css'\n\nimport PdfPlayground from './PdfPlayground/PdfPlayground'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PdfPlayground />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport pdfjs from '@bundled-es-modules/pdfjs-dist/build/pdf'\n\npdfjs.GlobalWorkerOptions.workerSrc =\n  'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.1.266/build/pdf.worker.min.js' // TODO: replace cdn with package worker\n// '@bundled-es-modules/pdfjs-dist/build/pdf.worker.min.js'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}