{"version":3,"sources":["PdfPlayground/PdfPlayground.module.css","PdfLoader/PdfLoader.module.css","PdfPlayground/PdfRenderer/PdfViewport.module.css","PdfPlayground/Toolbar/Toolbar.module.css","PdfLoader/PdfLoader.js","PdfPlayground/PdfRenderer/PdfDoc.js","PdfPlayground/PdfRenderer/PdfPage.js","PdfPlayground/PdfRenderer/PdfCanvas.js","PdfPlayground/PdfRenderer/PdfViewport.js","PdfPlayground/Toolbar/Toolbar.js","EscKeyHandler/EscKeyHandler.js","PdfPlayground/PdfPlayground.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","screenViewport","editorArea","pdfViewportArea","dropzone","inner","viewport","page","toolbar","scale","PdfLoader","onFilesChange","_callee","files","file","data","regenerator_default","a","wrap","_context","prev","next","console","log","arrayBuffer","sent","_this","props","onLoad","stop","onFilesError","error","warn","concat","react_default","createElement","className","styles","dist_default","onChange","this","onError","accepts","clickable","maxFiles","Component","loadDocument","pdfjs","getDocument","promise","PdfDoc","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","docObj","setState","prevProps","prevState","children","loadPage","doc","pageNum","getPage","PdfPage","pageObj","document","renderPdfToCanvas","canvasEl","getViewport","width","height","render","canvasContext","getContext","PdfCanvas","getMousePos","x","y","_canvas$getBoundingCl","canvasRef","current","getBoundingClientRect","left","top","React","createRef","_this$props","_this$props2","_this2","_this$props3","onClick","otherProps","objectWithoutProperties","Function","event","clientX","clientY","style","cursor","assign","ref","PdfViewport","_ref","PdfRenderer_PdfDoc","PdfRenderer_PdfPage","PdfRenderer_PdfCanvas","disabled","onZoomChange","onDownload","type","value","toFixed","EscKeyHandler","onKeyup","includes","key","addEventListener","removeEventListener","initialScale","PdfPlayground","showLoadDialog","drawRect","pdfDoc","pages","firstPage","_firstPage$getSize","modifiedPdfBytes","PDFDocument","load","embedFont","StandardFonts","Helvetica","getPages","getSize","drawSquare","size","borderWidth","borderColor","grayscale","color","rgb","save","blob","Blob","saveAs","onPdfLoad","onOpenLoadDialog","amount","onEsc","src_EscKeyHandler_EscKeyHandler","Toolbar","src_PdfLoader_PdfLoader","PdfRenderer_PdfViewport","_ref2","App","src_PdfPlayground_PdfPlayground","Boolean","window","location","hostname","match","GlobalWorkerOptions","workerSrc","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.971c10dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenViewport\":\"PdfPlayground_screenViewport__3uFdw\",\"editorArea\":\"PdfPlayground_editorArea__1M_EA\",\"pdfViewportArea\":\"PdfPlayground_pdfViewportArea__2gzME\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzone\":\"PdfLoader_dropzone__2cNmo\",\"inner\":\"PdfLoader_inner__1fpRF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewport\":\"PdfViewport_viewport__3i-1V\",\"page\":\"PdfViewport_page__1djwU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__vOrCc\",\"scale\":\"Toolbar_scale__WaOdJ\"};","import React, { Component } from 'react'\nimport Files from 'react-files'\n\nimport styles from './PdfLoader.module.css'\n\nclass PdfLoader extends Component {\n  onFilesChange = async files => {\n    console.log('got request to load files:', files)\n    const file = files[0]\n    const data = await file.arrayBuffer()\n    console.log('data:', data)\n    this.props.onLoad(data)\n  }\n\n  onFilesError = (error, files) => {\n    console.warn(`error loading files ${files}. error:`, error)\n  }\n\n  render() {\n    return (\n      <div className={styles.dropzone}>\n        <Files\n          className={styles.inner}\n          onChange={this.onFilesChange}\n          onError={this.onFilesError}\n          accepts={['.pdf']}\n          clickable\n          maxFiles={1}\n        >\n          Drop a file here or click to upload\n        </Files>\n      </div>\n    )\n  }\n}\n\nexport default PdfLoader\n","import React, { Component } from 'react'\nimport pdfjs from '@bundled-es-modules/pdfjs-dist/build/pdf'\n\nfunction loadDocument(data) {\n  return pdfjs.getDocument(data).promise\n}\n\nclass PdfDoc extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      docObj: null,\n      data: props.data\n    }\n  }\n\n  async componentDidMount() {\n    const docObj = await loadDocument(this.props.data)\n    this.setState({\n      docObj\n    })\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    // will update state only when 'props.data' changes\n    if (this.props.data !== prevProps.data) {\n      console.log('[PdfDoc] updating doc object')\n\n      const docObj = await loadDocument(this.props.data)\n      this.setState({\n        docObj,\n        data: this.props.data\n      })\n    }\n  }\n\n  render() {\n    const { children } = this.props\n    return this.state.docObj !== null ? children(this.state.docObj) : null\n  }\n}\n\nexport default PdfDoc\n","import React, { Component } from 'react'\n\nfunction loadPage(doc, pageNum) {\n  return doc.getPage(pageNum)\n}\n\nclass PdfPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      pageObj: null\n    }\n  }\n\n  async componentDidMount() {\n    const { document, pageNum } = this.props\n    const pageObj = await loadPage(document, pageNum)\n    this.setState({\n      pageObj\n    })\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { document, pageNum } = this.props\n    // will update state only when one of the props changes\n    if (document !== prevProps.document || pageNum !== prevProps.pageNum) {\n      const pageObj = await loadPage(document, pageNum)\n      this.setState({\n        pageObj\n      })\n    }\n  }\n\n  render() {\n    const { children } = this.props\n    return this.state.pageObj !== null ? children(this.state.pageObj) : null\n  }\n}\n\nexport default PdfPage\n","import React, { Component } from 'react'\n\nfunction renderPdfToCanvas(canvasEl, page, scale) {\n  const viewport = page.getViewport({ scale })\n\n  canvasEl.width = viewport.width // canvas width and height must be according to viewport scale!\n  canvasEl.height = viewport.height\n\n  page.render({\n    canvasContext: canvasEl.getContext('2d'),\n    viewport\n  })\n}\n\nclass PdfCanvas extends Component {\n  constructor(props) {\n    super(props)\n    this.canvasRef = React.createRef()\n  }\n\n  componentDidMount() {\n    const { page, scale } = this.props\n    renderPdfToCanvas(this.canvasRef.current, page, scale)\n  }\n\n  componentDidUpdate() {\n    const { page, scale } = this.props\n    renderPdfToCanvas(this.canvasRef.current, page, scale)\n  }\n\n  // drawDot = event => {\n  //   const { x, y } = this.getMousePos(event.clientX, event.clientY)\n  //   const canvas = this.canvasRef.current\n  //   const ctx = canvas.getContext('2d')\n  //   ctx.fillRect(x, y, 2, 2)\n  // }\n\n  getMousePos = (x, y) => {\n    // get mouse position relative to canvas\n    const canvas = this.canvasRef.current\n    const { left, top } = canvas.getBoundingClientRect()\n    return {\n      x: x - left,\n      y: y - top\n    }\n  }\n\n  render() {\n    const { page, scale, onClick, ...otherProps } = this.props\n    if (onClick instanceof Function) {\n      otherProps.onClick = event => {\n        return this.props.onClick(\n          event,\n          this.getMousePos(event.clientX, event.clientY)\n        )\n      }\n    }\n    otherProps.style = otherProps.style || {}\n    otherProps.style.cursor = 'crosshair'\n    return <canvas ref={this.canvasRef} {...otherProps} />\n  }\n}\n\nexport default PdfCanvas\n","import React from 'react'\nimport PdfDoc from './PdfDoc'\nimport PdfPage from './PdfPage'\nimport PdfCanvas from './PdfCanvas'\n\nimport styles from './PdfViewport.module.css'\n\nfunction PdfViewport({\n  data,\n  pageNum,\n  scale,\n  className,\n  style,\n  ...otherProps\n}) {\n  return (\n    <div className={`${className} ${styles.viewport}`} style={style}>\n      <div className={styles.page}>\n        {data !== null ? (\n          <PdfDoc data={data}>\n            {doc => (\n              <PdfPage document={doc} pageNum={pageNum}>\n                {page => (\n                  <PdfCanvas page={page} scale={scale} {...otherProps} />\n                )}\n              </PdfPage>\n            )}\n          </PdfDoc>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default PdfViewport\n","import React from 'react'\n\nimport styles from './Toolbar.module.css'\n\nfunction toolbar({ disabled, scale, onZoomChange, onDownload, onLoad }) {\n  return (\n    <div className={styles.toolbar}>\n      <div className={styles.scale}>\n        <button disabled={disabled} onClick={() => onZoomChange(+0.1)}>\n          +\n        </button>\n        <button disabled={disabled} onClick={() => onZoomChange(-0.1)}>\n          -\n        </button>\n        <input type=\"text\" disabled value={`${(scale * 100).toFixed(0)}%`} />\n      </div>\n\n      <button disabled={disabled} onClick={onLoad}>\n        Load\n      </button>\n      <button disabled={disabled} onClick={onDownload}>\n        Download\n      </button>\n    </div>\n  )\n}\n\nexport default toolbar\n","import { Component } from 'react'\n\nclass EscKeyHandler extends Component {\n  componentDidMount() {\n    document.addEventListener('keyup', this.onKeyup, false)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.onKeyup, false)\n  }\n\n  onKeyup = event => {\n    if (['Escape', 'Esc'].includes(event.key)) {\n      this.props.onClick()\n    }\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport default EscKeyHandler\n","import React, { Component } from 'react'\nimport { degrees, PDFDocument, rgb, grayscale, StandardFonts } from 'pdf-lib'\nimport { saveAs } from 'file-saver'\n\nimport PdfLoader from '../PdfLoader/PdfLoader'\nimport PdfViewport from './PdfRenderer/PdfViewport'\nimport Toolbar from './Toolbar/Toolbar'\nimport EscKeyHandler from '../EscKeyHandler/EscKeyHandler'\n\nimport styles from './PdfPlayground.module.css'\n\nconst initialScale = 1\n\nclass PdfPlayground extends Component {\n  state = {\n    data: null,\n    scale: initialScale,\n    showLoadDialog: true\n  }\n\n  drawRect = async (x, y) => {\n    console.log('viewport pos:', [x, y])\n    const pdfDoc = await PDFDocument.load(this.state.data)\n    const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica)\n    const pages = pdfDoc.getPages()\n    const firstPage = pages[0]\n    const { width, height } = firstPage.getSize()\n    // firstPage.drawText('This text was added with JavaScript!', {\n    //   x,\n    //   y: height - (y - 80),\n    //   size: 25,\n    //   font: helveticaFont,\n    //   color: rgb(0.95, 0.1, 0.1),\n    //   rotate: degrees(-45)\n    // })\n    const size = 20\n    firstPage.drawSquare({\n      x: x / this.state.scale,\n      y: height - y / this.state.scale - size,\n      size,\n      // rotate: degrees(-15),\n      borderWidth: 2,\n      borderColor: grayscale(0.5),\n      color: rgb(0.75, 0.2, 0.2)\n    })\n    const modifiedPdfBytes = await pdfDoc.save()\n    this.setState({\n      data: modifiedPdfBytes\n    })\n    console.log('modified loaded')\n  }\n\n  onDownload = () => {\n    const blob = new Blob([this.state.data], { type: 'application/pdf' })\n    console.log('request to download file accepted', blob)\n    saveAs(blob, 'output.pdf')\n  }\n\n  onPdfLoad = data => {\n    this.setState({ data, showLoadDialog: false, scale: initialScale })\n  }\n\n  onOpenLoadDialog = () => {\n    this.setState({\n      showLoadDialog: true\n    })\n  }\n\n  onZoomChange = amount => {\n    this.setState(state => ({\n      scale: state.scale + amount\n    }))\n  }\n\n  onEsc = () => {\n    if (this.state.data !== null && this.state.showLoadDialog === true) {\n      this.setState({ showLoadDialog: false })\n    }\n  }\n\n  render() {\n    console.log('[playground render] scale:', this.state.scale)\n\n    return (\n      <div className={styles.screenViewport}>\n        <EscKeyHandler onClick={this.onEsc} />\n        <h1>PDF Playground</h1>\n\n        <p>Click on the document to add small rectangles to it</p>\n        <div className={styles.editorArea}>\n          <Toolbar\n            disabled={this.state.data === null}\n            scale={this.state.scale}\n            onZoomChange={this.onZoomChange}\n            onDownload={this.onDownload}\n            onLoad={this.onOpenLoadDialog}\n          />\n          <div className={styles.pdfViewportArea}>\n            {this.state.showLoadDialog ? (\n              <PdfLoader onLoad={this.onPdfLoad} />\n            ) : null}\n            <PdfViewport\n              data={this.state.data}\n              pageNum={1}\n              scale={this.state.scale}\n              onClick={(event, { x, y }) => this.drawRect(x, y)}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PdfPlayground\n","import React from 'react'\nimport './App.css'\n\nimport PdfPlayground from './PdfPlayground/PdfPlayground'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PdfPlayground />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport pdfjs from '@bundled-es-modules/pdfjs-dist/build/pdf'\n\npdfjs.GlobalWorkerOptions.workerSrc =\n  'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.1.266/build/pdf.worker.min.js' // TODO: replace cdn with package worker\n// '@bundled-es-modules/pdfjs-dist/build/pdf.worker.min.js'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}