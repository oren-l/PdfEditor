{"version":3,"sources":["components/PdfRenderer/PdfViewport.module.css","components/Toolbar/Toolbar.module.css","components/PdfEditor/PdfEditor.module.css","components/PdfLoader/PdfLoader.module.css","context/file-context.js","context/viewport-context.js","context/counter-context.js","context/modification-context.js","containers/ToobarController/ToobarController.js","components/Toolbar/Toolbar.js","containers/LoadDialogController/LoadDialogController.js","components/PdfLoader/PdfLoader.js","components/PdfRenderer/PdfDoc.js","components/PdfRenderer/PdfPage.js","components/PdfRenderer/PdfCanvas.js","components/PdfRenderer/Overlay/OverlayItem.js","components/PdfRenderer/Overlay/Overlay.js","components/PdfRenderer/PdfViewport.js","containers/PdfViewportController/PdfViewportController.js","components/EscKeyHandler/EscKeyHandler.js","components/PdfEditor/PdfEditor.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","viewport","page","overlay","item","toolbar","scale","text","screenViewport","editorArea","pdfViewportArea","dropzone","inner","FileContext","createContext","data","setData","isFileLoaded","file_context","_ref","children","_useState","useState","_useState2","Object","slicedToArray","console","log","react_default","a","createElement","Provider","value","ViewportContext","setScale","resetScale","viewport_context","CounterContext","counter","resetCounter","incrementCounter","decrementCounter","counter_context","setCounter","initialModList","ModificationContext","modList","resetModList","addMod","changeMod","id","changeFunc","removeMod","modification_context","setModList","_useState3","_useState4","nextId","setNextId","mod","concat","toConsumableArray","_objectSpread","changedModList","map","filter","_callee","fileData","modificationList","pdfDoc","fontUrl","fontBytes","font","_pdfDoc$getPages","_pdfDoc$getPages2","firstPage","_firstPage$getSize","height","modifiedData","blob","regenerator_default","wrap","_context","prev","next","PDFDocument","load","sent","process","registerFontkit","fontkit","fetch","then","res","arrayBuffer","embedFont","getPages","getSize","forEach","drawText","template","x","position","y","size","color","rgb","save","Blob","type","saveAs","stop","ToolbarController","_useContext","useContext","_useContext2","disabled","onZoomChange","amount","onDownload","download","onLoad","runningLabelText","className","styles","onClick","toFixed","LoadDialogController","showDialog","setShowDialog","setFileData","openDialog","closeDialog","isAtReload","PdfLoader","onFilesChange","files","file","_this","props","onFilesError","error","warn","dist_default","onChange","this","onError","accepts","clickable","maxFiles","Component","loadDocument","pdfjs","getDocument","promise","PdfDoc","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","docObj","setState","prevProps","prevState","loadPage","doc","pageNum","getPage","PdfPage","pageObj","document","renderPdfToCanvas","canvasEl","getViewport","width","render","canvasContext","getContext","PdfCanvas","getMousePos","_canvas$getBoundingCl","canvasRef","current","getBoundingClientRect","left","top","React","createRef","_this$props","_this$props2","_this2","ref","event","clientX","clientY","style","cursor","memo","isSelected","otherProps","objectWithoutProperties","assign","fontSize","outline","draggable","title","Overlay","items","onItemMove","onItemDelete","overlayRef","useRef","selectedItemId","setSelectedItemId","react_keyboard_event_handler_default","handleKeys","handleEventType","onKeyEvent","Overlay_OverlayItem","key","onDragEnd","element","_element$getBoundingC","getRelativeMousePos","stopPropagation","PdfViewport","overlayItems","_ref$className","PdfRenderer_PdfDoc","PdfRenderer_PdfPage","Fragment","Overlay_Overlay","PdfRenderer_PdfCanvas","PdfViewportController","_useContext3","_useContext4","addModification","placeRunningCounter","PdfViewportController_objectSpread","EscKeyHandler","onKeyup","includes","addEventListener","removeEventListener","PdfEditor","LoadDialogController_LoadDialogController","loadDialogCtrl","components_EscKeyHandler_EscKeyHandler","ToobarController","toolbarCtrl","Toolbar","components_PdfLoader_PdfLoader","PdfViewportController_PdfViewportController","viewportCtrl","PdfRenderer_PdfViewport","App","PdfEditor_PdfEditor","Boolean","window","location","hostname","match","GlobalWorkerOptions","workerSrc","ReactDOM","containers_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1affd247.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewport\":\"PdfViewport_viewport__3V6dn\",\"page\":\"PdfViewport_page__1uGEO\",\"overlay\":\"PdfViewport_overlay__NZQ23\",\"item\":\"PdfViewport_item__344HK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__1pnoi\",\"scale\":\"Toolbar_scale__iCcp-\",\"text\":\"Toolbar_text__1k5cZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenViewport\":\"PdfEditor_screenViewport__2ZHEP\",\"editorArea\":\"PdfEditor_editorArea__3RcQj\",\"pdfViewportArea\":\"PdfEditor_pdfViewportArea__3dnYL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzone\":\"PdfLoader_dropzone__1u5la\",\"inner\":\"PdfLoader_inner__3auJD\"};","import React, { useState, createContext } from 'react'\n\nconst NO_FILE_DATA = null\nexport const initialState = { data: NO_FILE_DATA }\nexport const FileContext = createContext({\n  data: NO_FILE_DATA,\n  setData: () => {},\n  isFileLoaded: () => {}\n})\n\nexport default ({ children }) => {\n  const [data, setData] = useState(NO_FILE_DATA)\n  console.log('[file-context] file data:', data)\n  const isFileLoaded = () => data !== NO_FILE_DATA\n\n  return (\n    <FileContext.Provider value={{ data, setData, isFileLoaded }}>\n      {children}\n    </FileContext.Provider>\n  )\n}\n","import React, { useState, createContext } from 'react'\n\nconst initialScale = 1\nexport const ViewportContext = createContext({\n  scale: initialScale,\n  setScale: () => {},\n  resetScale: () => {}\n})\n\nexport default ({ children }) => {\n  const [scale, setScale] = useState(initialScale)\n  const resetScale = () => setScale(initialScale)\n  return (\n    <ViewportContext.Provider value={{ scale, setScale, resetScale }}>\n      {children}\n    </ViewportContext.Provider>\n  )\n}\n","import React, { useState, createContext } from 'react'\n\nconst initialCounter = 2\n\nexport const CounterContext = createContext({\n  counter: initialCounter,\n  resetCounter: () => {},\n  incrementCounter: () => {},\n  decrementCounter: () => {}\n})\n\nexport default ({ children }) => {\n  const [counter, setCounter] = useState(initialCounter)\n  const resetCounter = () => setCounter(initialCounter)\n  const incrementCounter = () => setCounter(counter => counter + 1)\n  const decrementCounter = () => setCounter(counter => counter - 1)\n  return (\n    <CounterContext.Provider\n      value={{ counter, resetCounter, incrementCounter, decrementCounter }}\n    >\n      {children}\n    </CounterContext.Provider>\n  )\n}\n","import React, { useState, createContext } from 'react'\n\nconst initialModList = []\nconst initialId = 0\n\nexport const ModificationContext = createContext({\n  modList: initialModList,\n  resetModList: () => {},\n  addMod: () => {},\n  changeMod: (id, changeFunc) => {},\n  removeMod: id => {}\n})\n\nexport default ({ children }) => {\n  const [modList, setModList] = useState(initialModList)\n  const [nextId, setNextId] = useState(initialId)\n  const resetModList = () => {\n    setModList(initialModList)\n    setNextId(initialId)\n  }\n\n  const addMod = mod => {\n    setNextId(id => id + 1)\n    return setModList(modList => [\n      ...modList,\n      {\n        ...mod,\n        id: nextId\n      }\n    ])\n  }\n\n  const changeMod = (id, changeFunc) => {\n    const changedModList = modList.map(mod =>\n      mod.id !== id ? mod : changeFunc(mod)\n    )\n\n    setModList(changedModList)\n  }\n\n  const removeMod = id => {\n    const changedModList = modList\n      .filter(mod => mod.id !== id)\n      .map(mod => (mod.id < id ? mod : { ...mod, value: mod.value - 1 }))\n    setModList(changedModList)\n  }\n\n  return (\n    <ModificationContext.Provider\n      value={{\n        modList,\n        resetModList,\n        addMod,\n        changeMod,\n        removeMod\n      }}\n    >\n      {children}\n    </ModificationContext.Provider>\n  )\n}\n","import { useContext } from 'react'\nimport { saveAs } from 'file-saver'\nimport { PDFDocument, rgb } from 'pdf-lib'\nimport fontkit from '@pdf-lib/fontkit'\n\nimport { FileContext } from '../../context/file-context'\nimport { ViewportContext } from '../../context/viewport-context'\nimport { CounterContext } from '../../context/counter-context'\nimport { ModificationContext } from '../../context/modification-context'\n\nasync function download(fileData, modificationList) {\n  const pdfDoc = await PDFDocument.load(fileData)\n  const fontUrl = `${process.env.PUBLIC_URL}/fonts/Roboto/Roboto-Regular.ttf`\n  pdfDoc.registerFontkit(fontkit)\n  const fontBytes = await fetch(fontUrl).then(res => res.arrayBuffer())\n  console.log('font loaded: ', fontBytes)\n  const font = await pdfDoc.embedFont(fontBytes)\n  const [firstPage] = pdfDoc.getPages()\n  const { height } = firstPage.getSize()\n  modificationList.forEach(item => {\n    firstPage.drawText(item.template(item.value), {\n      x: item.position.x,\n      y: height - (item.position.y + item.size),\n      size: item.size,\n      font,\n      color: rgb(0, 0, 1)\n    })\n  })\n  const modifiedData = await pdfDoc.save()\n\n  const blob = new Blob([modifiedData], { type: 'application/pdf' })\n  console.log('request to download file accepted', blob)\n  saveAs(blob, 'output.pdf')\n}\n\nfunction ToolbarController({ children }) {\n  const { data: fileData, isFileLoaded } = useContext(FileContext)\n  const { scale, setScale } = useContext(ViewportContext)\n  const { counter } = useContext(CounterContext)\n  const { modList } = useContext(ModificationContext)\n  const onZoomChange = amount => setScale(scale => scale + amount)\n\n  return children({\n    disabled: isFileLoaded() === false,\n    scale,\n    onZoomChange,\n    counter,\n    onDownload: () => download(fileData, modList)\n  })\n}\n\nexport default ToolbarController\n","import React from 'react'\n\nimport styles from './Toolbar.module.css'\n\nfunction toolbar({\n  disabled,\n  scale,\n  counter,\n  onZoomChange,\n  onDownload,\n  onLoad\n}) {\n  const runningLabelText = disabled ? null : (\n    <div className={styles.text}>\n      Place next running label: {`{${counter}}`}\n    </div>\n  )\n  return (\n    <div className={styles.toolbar}>\n      <div className={styles.scale}>\n        <button disabled={disabled} onClick={() => onZoomChange(+0.1)}>\n          +\n        </button>\n        <button disabled={disabled} onClick={() => onZoomChange(-0.1)}>\n          -\n        </button>\n        <input type=\"text\" disabled value={`${(scale * 100).toFixed(0)}%`} />\n      </div>\n\n      <button disabled={disabled} onClick={onLoad}>\n        Load\n      </button>\n      <button disabled={disabled} onClick={onDownload}>\n        Download\n      </button>\n      {runningLabelText}\n    </div>\n  )\n}\n\nexport default toolbar\n","import React, { useState, useContext } from 'react'\n\nimport { FileContext } from '../../context/file-context'\nimport { ViewportContext } from '../../context/viewport-context'\nimport { CounterContext } from '../../context/counter-context'\nimport { ModificationContext } from '../../context/modification-context'\n\nfunction LoadDialogController({ children }) {\n  const [showDialog, setShowDialog] = useState(true)\n  const { isFileLoaded, setData: setFileData } = useContext(FileContext)\n  const { resetScale } = useContext(ViewportContext)\n  const { resetCounter } = useContext(CounterContext)\n  const { resetModList } = useContext(ModificationContext)\n\n  const onLoad = data => {\n    setShowDialog(false)\n    setFileData(data)\n    resetScale()\n    resetCounter()\n    resetModList()\n  }\n\n  return children({\n    showDialog,\n    openDialog: () => setShowDialog(true),\n    closeDialog: () => setShowDialog(false),\n    onLoad,\n    isAtReload: () => isFileLoaded() && showDialog\n  })\n}\n\nexport default LoadDialogController\n","import React, { Component } from 'react'\nimport Files from 'react-files'\n\nimport styles from './PdfLoader.module.css'\n\nclass PdfLoader extends Component {\n  onFilesChange = async files => {\n    console.log('got request to load files:', files)\n    const file = files[0]\n    const data = await file.arrayBuffer()\n    console.log('data:', data)\n    this.props.onLoad(data)\n  }\n\n  onFilesError = (error, files) => {\n    console.warn(`error loading files ${files}. error:`, error)\n  }\n\n  render() {\n    return (\n      <div className={styles.dropzone}>\n        <Files\n          className={styles.inner}\n          onChange={this.onFilesChange}\n          onError={this.onFilesError}\n          accepts={['.pdf']}\n          clickable\n          maxFiles={1}\n        >\n          Drop a file here or click to upload\n        </Files>\n      </div>\n    )\n  }\n}\n\nexport default PdfLoader\n","import React, { Component } from 'react'\nimport pdfjs from '@bundled-es-modules/pdfjs-dist/build/pdf'\n\nfunction loadDocument(data) {\n  return pdfjs.getDocument(data).promise\n}\n\nclass PdfDoc extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      docObj: null,\n      data: props.data\n    }\n  }\n\n  async componentDidMount() {\n    const docObj = await loadDocument(this.props.data)\n    this.setState({\n      docObj\n    })\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    // will update state only when 'props.data' changes\n    if (this.props.data !== prevProps.data) {\n      console.log('[PdfDoc] updating doc object')\n\n      const docObj = await loadDocument(this.props.data)\n      this.setState({\n        docObj,\n        data: this.props.data\n      })\n    }\n  }\n\n  render() {\n    const { children } = this.props\n    return this.state.docObj !== null ? children(this.state.docObj) : null\n  }\n}\n\nexport default PdfDoc\n","import React, { Component } from 'react'\n\nfunction loadPage(doc, pageNum) {\n  return doc.getPage(pageNum)\n}\n\nclass PdfPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      pageObj: null\n    }\n  }\n\n  async componentDidMount() {\n    const { document, pageNum } = this.props\n    const pageObj = await loadPage(document, pageNum)\n    this.setState({\n      pageObj\n    })\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { document, pageNum } = this.props\n    // will update state only when one of the props changes\n    if (document !== prevProps.document || pageNum !== prevProps.pageNum) {\n      const pageObj = await loadPage(document, pageNum)\n      this.setState({\n        pageObj\n      })\n    }\n  }\n\n  render() {\n    const { children } = this.props\n    return this.state.pageObj !== null ? children(this.state.pageObj) : null\n  }\n}\n\nexport default PdfPage\n","import React, { Component } from 'react'\n\nfunction renderPdfToCanvas(canvasEl, page, scale) {\n  const viewport = page.getViewport({ scale })\n\n  canvasEl.width = viewport.width // canvas width and height must be according to viewport scale!\n  canvasEl.height = viewport.height\n\n  // console.warn('[PdfCanvas] page.render')\n  page.render({\n    canvasContext: canvasEl.getContext('2d'),\n    viewport\n  })\n}\n\nclass PdfCanvas extends Component {\n  constructor(props) {\n    super(props)\n    this.canvasRef = React.createRef()\n  }\n\n  componentDidMount() {\n    const { page, scale } = this.props\n    renderPdfToCanvas(this.canvasRef.current, page, scale)\n  }\n\n  componentDidUpdate(prevProps) {\n    const { page, scale } = this.props\n    if (page !== prevProps.page || scale !== prevProps.scale) {\n      renderPdfToCanvas(this.canvasRef.current, page, scale)\n    }\n  }\n\n  // drawDot = event => {\n  //   const { x, y } = this.getMousePos(event.clientX, event.clientY)\n  //   const canvas = this.canvasRef.current\n  //   const ctx = canvas.getContext('2d')\n  //   ctx.fillRect(x, y, 2, 2)\n  // }\n\n  getMousePos = (x, y) => {\n    // get mouse position relative to canvas\n    const canvas = this.canvasRef.current\n    const { left, top } = canvas.getBoundingClientRect()\n    return {\n      x: x - left,\n      y: y - top\n    }\n  }\n\n  render() {\n    const { onClick } = this.props\n\n    return (\n      <canvas\n        ref={this.canvasRef}\n        onClick={event =>\n          onClick(event, this.getMousePos(event.clientX, event.clientY))\n        }\n        style={{ cursor: 'crosshair' }}\n      />\n    )\n  }\n}\n\nexport default PdfCanvas\n","import React from 'react'\n\nfunction OverlayItem({\n  position,\n  size,\n  value,\n  scale,\n  template,\n  className,\n  isSelected,\n  ...otherProps\n}) {\n  return (\n    <div\n      className={className}\n      style={{\n        left: `${position.x * scale}px`,\n        top: `${position.y * scale}px`,\n        fontSize: `${size * scale}px`,\n        outline: isSelected ? '1px solid red' : 'none',\n        cursor: isSelected ? 'grab' : null\n      }}\n      draggable={isSelected}\n      title={isSelected ? 'Press <Delete> to remove this' : null}\n      {...otherProps}\n    >\n      {template(value)}\n    </div>\n  )\n}\n\nexport default React.memo(OverlayItem)\n","import React, { useRef, useState } from 'react'\nimport KeyboardEventHandler from 'react-keyboard-event-handler'\n\nimport OverlayItem from './OverlayItem'\n\nimport styles from '../PdfViewport.module.css'\n\nfunction getRelativeMousePos(element, event) {\n  const { left, top } = element.getBoundingClientRect()\n  return {\n    x: event.clientX - left,\n    y: event.clientY - top\n  }\n}\n\nfunction Overlay({ items, scale, onItemMove, onItemDelete }) {\n  const overlayRef = useRef(null)\n  const [selectedItemId, setSelectedItemId] = useState(null)\n\n  return (\n    <div\n      ref={overlayRef}\n      className={styles.overlay}\n      style={{\n        position: selectedItemId !== null ? 'absolute' : null\n      }}\n      onClick={() => {\n        setSelectedItemId(null)\n      }}\n    >\n      <KeyboardEventHandler\n        handleKeys={['delete']}\n        handleEventType=\"keyup\"\n        onKeyEvent={() => {\n          if (selectedItemId !== null) {\n            onItemDelete(selectedItemId)\n            setSelectedItemId(null)\n          }\n        }}\n      />\n      {items.map(item => (\n        <OverlayItem\n          key={item.id}\n          className={styles.item}\n          position={item.position}\n          size={item.size}\n          value={item.value}\n          scale={scale}\n          template={item.template}\n          onDragEnd={event =>\n            onItemMove(\n              event,\n              getRelativeMousePos(overlayRef.current, event),\n              item.id\n            )\n          }\n          isSelected={item.id === selectedItemId}\n          onClick={event => {\n            setSelectedItemId(item.id)\n            event.stopPropagation()\n          }}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default Overlay\n","import React from 'react'\nimport PdfDoc from './PdfDoc'\nimport PdfPage from './PdfPage'\nimport PdfCanvas from './PdfCanvas'\nimport Overlay from './Overlay/Overlay'\n\nimport styles from './PdfViewport.module.css'\n\nfunction PdfViewport({\n  data,\n  pageNum,\n  scale,\n  overlayItems,\n  className = '',\n  style,\n  onClick,\n  onItemMove,\n  onItemDelete\n}) {\n  return (\n    <div className={`${className} ${styles.viewport}`} style={style}>\n      <div className={styles.page}>\n        {data !== null ? (\n          <PdfDoc data={data}>\n            {doc => (\n              <PdfPage document={doc} pageNum={pageNum}>\n                {page => (\n                  <React.Fragment>\n                    <Overlay\n                      items={overlayItems}\n                      scale={scale}\n                      onItemMove={onItemMove}\n                      onItemDelete={onItemDelete}\n                    />\n                    <PdfCanvas page={page} scale={scale} onClick={onClick} />\n                  </React.Fragment>\n                )}\n              </PdfPage>\n            )}\n          </PdfDoc>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default PdfViewport\n","import { useContext } from 'react'\n\nimport { FileContext } from '../../context/file-context'\nimport { ViewportContext } from '../../context/viewport-context'\nimport { CounterContext } from '../../context/counter-context'\nimport { ModificationContext } from '../../context/modification-context'\n\nfunction placeRunningCounter(\n  scale,\n  counter,\n  position,\n  addModification,\n  incrementCounter\n) {\n  const size = 12\n  const template = value => `(${value})`\n  addModification({\n    position: {\n      x: position.x / scale - size / 2,\n      y: position.y / scale - size / 2\n    },\n    size,\n    value: counter,\n    template\n  })\n  incrementCounter()\n}\n\nfunction PdfViewportController({ children }) {\n  const { data } = useContext(FileContext)\n  const { scale } = useContext(ViewportContext)\n  const { counter, incrementCounter, decrementCounter } = useContext(\n    CounterContext\n  )\n  const { modList, addMod: addModification, changeMod, removeMod } = useContext(\n    ModificationContext\n  )\n\n  return children({\n    data,\n    pageNum: 1,\n    scale,\n    overlayItems: modList,\n    onClick: (event, position) =>\n      placeRunningCounter(\n        scale,\n        counter,\n        position,\n        addModification,\n        incrementCounter\n      ),\n    onItemMove: (event, position, id) => {\n      changeMod(id, mod => ({\n        ...mod,\n        position: {\n          x: position.x / scale - mod.size / 2,\n          y: position.y / scale - mod.size / 2\n        }\n      }))\n    },\n    onItemDelete: id => {\n      removeMod(id)\n      decrementCounter()\n    }\n  })\n}\n\nexport default PdfViewportController\n","import { Component } from 'react'\n\nclass EscKeyHandler extends Component {\n  componentDidMount() {\n    document.addEventListener('keyup', this.onKeyup, false)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.onKeyup, false)\n  }\n\n  onKeyup = event => {\n    if (['Escape', 'Esc'].includes(event.key)) {\n      this.props.onClick()\n    }\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport default EscKeyHandler\n","import React from 'react'\n\nimport ViewportStateProvider from '../../context/viewport-context'\nimport CounterProvider from '../../context/counter-context'\nimport ToolbarController from '../../containers/ToobarController/ToobarController'\nimport Toolbar from '../Toolbar/Toolbar'\nimport LoadDialogController from '../../containers/LoadDialogController/LoadDialogController'\nimport PdfLoader from '../PdfLoader/PdfLoader'\nimport PdfViewport from '../PdfRenderer/PdfViewport'\nimport PdfViewportController from '../../containers/PdfViewportController/PdfViewportController'\nimport EscKeyHandler from '../EscKeyHandler/EscKeyHandler'\nimport ModificationProvider from '../../context/modification-context'\n\nimport styles from './PdfEditor.module.css'\n\nfunction PdfEditor() {\n  console.log('[PdfEditor] render')\n\n  return (\n    <div className={styles.screenViewport}>\n      <ViewportStateProvider>\n        <CounterProvider>\n          <ModificationProvider>\n            <div className={styles.editorArea}>\n              <LoadDialogController>\n                {loadDialogCtrl => (\n                  <React.Fragment>\n                    {loadDialogCtrl.isAtReload() ? (\n                      <EscKeyHandler onClick={loadDialogCtrl.closeDialog} />\n                    ) : null}\n\n                    <ToolbarController>\n                      {toolbarCtrl => (\n                        <Toolbar\n                          onLoad={loadDialogCtrl.openDialog}\n                          {...toolbarCtrl}\n                        />\n                      )}\n                    </ToolbarController>\n                    <div className={styles.pdfViewportArea}>\n                      {loadDialogCtrl.showDialog ? (\n                        <PdfLoader onLoad={loadDialogCtrl.onLoad} />\n                      ) : null}\n\n                      <PdfViewportController>\n                        {viewportCtrl => <PdfViewport {...viewportCtrl} />}\n                      </PdfViewportController>\n                    </div>\n                  </React.Fragment>\n                )}\n              </LoadDialogController>\n            </div>\n          </ModificationProvider>\n        </CounterProvider>\n      </ViewportStateProvider>\n    </div>\n  )\n}\n\nexport default PdfEditor\n","import React from 'react'\nimport './App.css'\n\nimport FileProvider from '../context/file-context'\nimport PdfEditor from '../components/PdfEditor/PdfEditor'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FileProvider>\n        <PdfEditor />\n      </FileProvider>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './containers/App'\nimport * as serviceWorker from './serviceWorker'\nimport pdfjs from '@bundled-es-modules/pdfjs-dist/build/pdf'\n\npdfjs.GlobalWorkerOptions.workerSrc =\n  'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.1.266/build/pdf.worker.min.js' // TODO: replace cdn with package worker\n// '@bundled-es-modules/pdfjs-dist/build/pdf.worker.min.js'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}