{"version":3,"sources":["components/PdfRenderer/PdfViewport.module.css","components/Toolbar/Toolbar.module.css","components/PdfEditor/PdfEditor.module.css","components/PdfLoader/PdfLoader.module.css","context/file-context.js","context/viewport-context.js","context/counter-context.js","context/modification-context.js","containers/ToobarController/ToobarController.js","components/Toolbar/Toolbar.js","containers/LoadDialogController/LoadDialogController.js","components/PdfLoader/PdfLoader.js","components/PdfRenderer/PdfDoc.js","components/PdfRenderer/PdfPage.js","components/PdfRenderer/PdfCanvas.js","components/PdfRenderer/OverlayItem.js","components/PdfRenderer/PdfViewport.js","containers/PdfViewportController/PdfViewportController.js","components/EscKeyHandler/EscKeyHandler.js","components/PdfEditor/PdfEditor.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","viewport","page","overlay","item","toolbar","scale","text","screenViewport","editorArea","pdfViewportArea","dropzone","inner","FileContext","createContext","data","setData","isFileLoaded","file_context","_ref","children","_useState","useState","_useState2","Object","slicedToArray","console","log","react_default","a","createElement","Provider","value","ViewportContext","setScale","resetScale","viewport_context","CounterContext","counter","resetCounter","incrementCounter","counter_context","setCounter","initialModList","ModificationContext","modList","resetModList","addMod","modification_context","setModList","_useState3","_useState4","nextId","setNextId","mod","id","concat","toConsumableArray","_objectSpread","_callee","fileData","modificationList","pdfDoc","font","_pdfDoc$getPages","_pdfDoc$getPages2","firstPage","_firstPage$getSize","height","modifiedData","blob","regenerator_default","wrap","_context","prev","next","PDFDocument","load","sent","embedFont","StandardFonts","Helvetica","getPages","getSize","forEach","drawText","content","x","position","y","size","color","rgb","save","Blob","type","saveAs","stop","ToolbarController","_useContext","useContext","_useContext2","disabled","onZoomChange","amount","onDownload","download","onLoad","runningLabelText","className","styles","onClick","toFixed","LoadDialogController","showDialog","setShowDialog","setFileData","openDialog","closeDialog","isAtReload","PdfLoader","onFilesChange","files","file","arrayBuffer","_this","props","onFilesError","error","warn","dist_default","onChange","this","onError","accepts","clickable","maxFiles","Component","loadDocument","pdfjs","getDocument","promise","PdfDoc","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","docObj","setState","prevProps","prevState","loadPage","doc","pageNum","getPage","PdfPage","pageObj","document","renderPdfToCanvas","canvasEl","getViewport","width","render","canvasContext","getContext","PdfCanvas","getMousePos","_canvas$getBoundingCl","canvasRef","current","getBoundingClientRect","left","top","React","createRef","_this$props","_this$props2","_this2","_this$props3","otherProps","objectWithoutProperties","Function","event","clientX","clientY","style","cursor","assign","ref","memo","fontSize","PdfViewport","overlayItems","PdfRenderer_PdfDoc","PdfRenderer_PdfPage","Fragment","map","PdfRenderer_OverlayItem","key","PdfRenderer_PdfCanvas","PdfViewportController","_useContext3","_useContext4","addModification","placeRunningCounter","EscKeyHandler","onKeyup","includes","addEventListener","removeEventListener","PdfEditor","LoadDialogController_LoadDialogController","loadDialogCtrl","components_EscKeyHandler_EscKeyHandler","ToobarController","toolbarCtrl","Toolbar","components_PdfLoader_PdfLoader","PdfViewportController_PdfViewportController","viewportCtrl","PdfRenderer_PdfViewport","App","PdfEditor_PdfEditor","Boolean","window","location","hostname","match","GlobalWorkerOptions","workerSrc","ReactDOM","containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88e82abb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewport\":\"PdfViewport_viewport__3V6dn\",\"page\":\"PdfViewport_page__1uGEO\",\"overlay\":\"PdfViewport_overlay__NZQ23\",\"item\":\"PdfViewport_item__344HK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__1pnoi\",\"scale\":\"Toolbar_scale__iCcp-\",\"text\":\"Toolbar_text__1k5cZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenViewport\":\"PdfEditor_screenViewport__2ZHEP\",\"editorArea\":\"PdfEditor_editorArea__3RcQj\",\"pdfViewportArea\":\"PdfEditor_pdfViewportArea__3dnYL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzone\":\"PdfLoader_dropzone__1u5la\",\"inner\":\"PdfLoader_inner__3auJD\"};","import React, { useState, createContext } from 'react'\n\nconst NO_FILE_DATA = null\nexport const initialState = { data: NO_FILE_DATA }\nexport const FileContext = createContext({\n  data: NO_FILE_DATA,\n  setData: () => {},\n  isFileLoaded: () => {}\n})\n\nexport default ({ children }) => {\n  const [data, setData] = useState(NO_FILE_DATA)\n  console.log('[file-context] file data:', data)\n  const isFileLoaded = () => data !== NO_FILE_DATA\n\n  return (\n    <FileContext.Provider value={{ data, setData, isFileLoaded }}>\n      {children}\n    </FileContext.Provider>\n  )\n}\n","import React, { useState, createContext } from 'react'\n\nconst initialScale = 1\nexport const ViewportContext = createContext({\n  scale: initialScale,\n  setScale: () => {},\n  resetScale: () => {}\n})\n\nexport default ({ children }) => {\n  const [scale, setScale] = useState(initialScale)\n  const resetScale = () => setScale(initialScale)\n  return (\n    <ViewportContext.Provider value={{ scale, setScale, resetScale }}>\n      {children}\n    </ViewportContext.Provider>\n  )\n}\n","import React, { useState, createContext } from 'react'\n\nconst initialCounter = 2\n\nexport const CounterContext = createContext({\n  counter: initialCounter,\n  resetCounter: () => {},\n  incrementCounter: () => {}\n})\n\nexport default ({ children }) => {\n  const [counter, setCounter] = useState(initialCounter)\n  const resetCounter = () => setCounter(initialCounter)\n  const incrementCounter = () => setCounter(counter => counter + 1)\n  return (\n    <CounterContext.Provider\n      value={{ counter, resetCounter, incrementCounter }}\n    >\n      {children}\n    </CounterContext.Provider>\n  )\n}\n","import React, { useState, createContext } from 'react'\n\nconst initialModList = []\nconst initialId = 0\n\nexport const ModificationContext = createContext({\n  modList: initialModList,\n  resetModList: () => {},\n  addMod: () => {}\n  // remove: () => {}\n})\n\nexport default ({ children }) => {\n  const [modList, setModList] = useState(initialModList)\n  const [nextId, setNextId] = useState(initialId)\n  const resetModList = () => {\n    setModList(initialModList)\n    setNextId(initialId)\n  }\n\n  const addMod = mod => {\n    setNextId(id => id + 1)\n    return setModList(modList => [\n      ...modList,\n      {\n        ...mod,\n        id: nextId\n      }\n    ])\n  }\n\n  // TODO: remove mod\n  return (\n    <ModificationContext.Provider\n      value={{\n        modList,\n        resetModList,\n        addMod\n      }}\n    >\n      {children}\n    </ModificationContext.Provider>\n  )\n}\n","import { useContext } from 'react'\nimport { saveAs } from 'file-saver'\nimport { degrees, PDFDocument, rgb, grayscale, StandardFonts } from 'pdf-lib'\n\nimport { FileContext } from '../../context/file-context'\nimport { ViewportContext } from '../../context/viewport-context'\nimport { CounterContext } from '../../context/counter-context'\nimport { ModificationContext } from '../../context/modification-context'\n\nasync function download(fileData, modificationList) {\n  const pdfDoc = await PDFDocument.load(fileData)\n  const font = await pdfDoc.embedFont(StandardFonts.Helvetica)\n  const [firstPage] = pdfDoc.getPages()\n  const { height } = firstPage.getSize()\n  modificationList.forEach(item => {\n    firstPage.drawText(item.content, {\n      x: item.position.x,\n      y: height - (item.position.y + item.size),\n      size: item.size,\n      font,\n      color: rgb(1, 0, 0)\n    })\n  })\n  const modifiedData = await pdfDoc.save()\n\n  const blob = new Blob([modifiedData], { type: 'application/pdf' })\n  console.log('request to download file accepted', blob)\n  saveAs(blob, 'output.pdf')\n}\n\nfunction ToolbarController({ children }) {\n  const { data: fileData, isFileLoaded } = useContext(FileContext)\n  const { scale, setScale } = useContext(ViewportContext)\n  const { counter } = useContext(CounterContext)\n  const { modList } = useContext(ModificationContext)\n  const onZoomChange = amount => setScale(scale => scale + amount)\n\n  return children({\n    disabled: isFileLoaded() === false,\n    scale,\n    onZoomChange,\n    counter,\n    onDownload: () => download(fileData, modList)\n  })\n}\n\nexport default ToolbarController\n","import React from 'react'\n\nimport styles from './Toolbar.module.css'\n\nfunction toolbar({\n  disabled,\n  scale,\n  counter,\n  onZoomChange,\n  onDownload,\n  onLoad\n}) {\n  const runningLabelText = disabled ? null : (\n    <div className={styles.text}>\n      Place next running label: {`{${counter}}`}\n    </div>\n  )\n  return (\n    <div className={styles.toolbar}>\n      <div className={styles.scale}>\n        <button disabled={disabled} onClick={() => onZoomChange(+0.1)}>\n          +\n        </button>\n        <button disabled={disabled} onClick={() => onZoomChange(-0.1)}>\n          -\n        </button>\n        <input type=\"text\" disabled value={`${(scale * 100).toFixed(0)}%`} />\n      </div>\n\n      <button disabled={disabled} onClick={onLoad}>\n        Load\n      </button>\n      <button disabled={disabled} onClick={onDownload}>\n        Download\n      </button>\n      {runningLabelText}\n    </div>\n  )\n}\n\nexport default toolbar\n","import React, { useState, useContext } from 'react'\n\nimport { FileContext } from '../../context/file-context'\nimport { ViewportContext } from '../../context/viewport-context'\nimport { CounterContext } from '../../context/counter-context'\nimport { ModificationContext } from '../../context/modification-context'\n\nfunction LoadDialogController({ children }) {\n  const [showDialog, setShowDialog] = useState(true)\n  const { isFileLoaded, setData: setFileData } = useContext(FileContext)\n  const { resetScale } = useContext(ViewportContext)\n  const { resetCounter } = useContext(CounterContext)\n  const { resetModList } = useContext(ModificationContext)\n\n  const onLoad = data => {\n    setShowDialog(false)\n    setFileData(data)\n    resetScale()\n    resetCounter()\n    resetModList()\n  }\n\n  return children({\n    showDialog,\n    openDialog: () => setShowDialog(true),\n    closeDialog: () => setShowDialog(false),\n    onLoad,\n    isAtReload: () => isFileLoaded() && showDialog\n  })\n}\n\nexport default LoadDialogController\n","import React, { Component } from 'react'\nimport Files from 'react-files'\n\nimport styles from './PdfLoader.module.css'\n\nclass PdfLoader extends Component {\n  onFilesChange = async files => {\n    console.log('got request to load files:', files)\n    const file = files[0]\n    const data = await file.arrayBuffer()\n    console.log('data:', data)\n    this.props.onLoad(data)\n  }\n\n  onFilesError = (error, files) => {\n    console.warn(`error loading files ${files}. error:`, error)\n  }\n\n  render() {\n    return (\n      <div className={styles.dropzone}>\n        <Files\n          className={styles.inner}\n          onChange={this.onFilesChange}\n          onError={this.onFilesError}\n          accepts={['.pdf']}\n          clickable\n          maxFiles={1}\n        >\n          Drop a file here or click to upload\n        </Files>\n      </div>\n    )\n  }\n}\n\nexport default PdfLoader\n","import React, { Component } from 'react'\nimport pdfjs from '@bundled-es-modules/pdfjs-dist/build/pdf'\n\nfunction loadDocument(data) {\n  return pdfjs.getDocument(data).promise\n}\n\nclass PdfDoc extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      docObj: null,\n      data: props.data\n    }\n  }\n\n  async componentDidMount() {\n    const docObj = await loadDocument(this.props.data)\n    this.setState({\n      docObj\n    })\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    // will update state only when 'props.data' changes\n    if (this.props.data !== prevProps.data) {\n      console.log('[PdfDoc] updating doc object')\n\n      const docObj = await loadDocument(this.props.data)\n      this.setState({\n        docObj,\n        data: this.props.data\n      })\n    }\n  }\n\n  render() {\n    const { children } = this.props\n    return this.state.docObj !== null ? children(this.state.docObj) : null\n  }\n}\n\nexport default PdfDoc\n","import React, { Component } from 'react'\n\nfunction loadPage(doc, pageNum) {\n  return doc.getPage(pageNum)\n}\n\nclass PdfPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      pageObj: null\n    }\n  }\n\n  async componentDidMount() {\n    const { document, pageNum } = this.props\n    const pageObj = await loadPage(document, pageNum)\n    this.setState({\n      pageObj\n    })\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { document, pageNum } = this.props\n    // will update state only when one of the props changes\n    if (document !== prevProps.document || pageNum !== prevProps.pageNum) {\n      const pageObj = await loadPage(document, pageNum)\n      this.setState({\n        pageObj\n      })\n    }\n  }\n\n  render() {\n    const { children } = this.props\n    return this.state.pageObj !== null ? children(this.state.pageObj) : null\n  }\n}\n\nexport default PdfPage\n","import React, { Component } from 'react'\n\nfunction renderPdfToCanvas(canvasEl, page, scale) {\n  const viewport = page.getViewport({ scale })\n\n  canvasEl.width = viewport.width // canvas width and height must be according to viewport scale!\n  canvasEl.height = viewport.height\n\n  page.render({\n    canvasContext: canvasEl.getContext('2d'),\n    viewport\n  })\n}\n\nclass PdfCanvas extends Component {\n  constructor(props) {\n    super(props)\n    this.canvasRef = React.createRef()\n  }\n\n  componentDidMount() {\n    const { page, scale } = this.props\n    renderPdfToCanvas(this.canvasRef.current, page, scale)\n  }\n\n  componentDidUpdate() {\n    const { page, scale } = this.props\n    renderPdfToCanvas(this.canvasRef.current, page, scale)\n  }\n\n  // drawDot = event => {\n  //   const { x, y } = this.getMousePos(event.clientX, event.clientY)\n  //   const canvas = this.canvasRef.current\n  //   const ctx = canvas.getContext('2d')\n  //   ctx.fillRect(x, y, 2, 2)\n  // }\n\n  getMousePos = (x, y) => {\n    // get mouse position relative to canvas\n    const canvas = this.canvasRef.current\n    const { left, top } = canvas.getBoundingClientRect()\n    return {\n      x: x - left,\n      y: y - top\n    }\n  }\n\n  render() {\n    const { page, scale, onClick, ...otherProps } = this.props\n    if (onClick instanceof Function) {\n      otherProps.onClick = event => {\n        return this.props.onClick(\n          event,\n          this.getMousePos(event.clientX, event.clientY)\n        )\n      }\n    }\n    otherProps.style = otherProps.style || {}\n    otherProps.style.cursor = 'crosshair'\n    return <canvas ref={this.canvasRef} {...otherProps} />\n  }\n}\n\nexport default PdfCanvas\n","import React from 'react'\n\nfunction OverlayItem({ position, size, content, scale, className }) {\n  return (\n    <div\n      className={className}\n      style={{\n        left: `${position.x * scale}px`,\n        top: `${position.y * scale}px`,\n        fontSize: `${size * scale}px`\n      }}\n    >\n      {content}\n    </div>\n  )\n}\n\nexport default React.memo(OverlayItem)\n","import React from 'react'\nimport PdfDoc from './PdfDoc'\nimport PdfPage from './PdfPage'\nimport PdfCanvas from './PdfCanvas'\nimport OverlayItem from './OverlayItem'\n\nimport styles from './PdfViewport.module.css'\n\nfunction PdfViewport({\n  data,\n  pageNum,\n  scale,\n  overlayItems,\n  className,\n  style,\n  ...otherProps\n}) {\n  return (\n    <div className={`${className} ${styles.viewport}`} style={style}>\n      <div className={styles.page}>\n        {data !== null ? (\n          <PdfDoc data={data}>\n            {doc => (\n              <PdfPage document={doc} pageNum={pageNum}>\n                {page => (\n                  <React.Fragment>\n                    <div className={styles.overlay}>\n                      {overlayItems.map(item => (\n                        <OverlayItem\n                          key={item.id}\n                          className={styles.item}\n                          position={item.position}\n                          size={item.size}\n                          content={item.content}\n                          scale={scale}\n                        />\n                      ))}\n                    </div>\n                    <PdfCanvas page={page} scale={scale} {...otherProps} />\n                  </React.Fragment>\n                )}\n              </PdfPage>\n            )}\n          </PdfDoc>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default PdfViewport\n","import { useContext } from 'react'\n\nimport { FileContext } from '../../context/file-context'\nimport { ViewportContext } from '../../context/viewport-context'\nimport { CounterContext } from '../../context/counter-context'\nimport { ModificationContext } from '../../context/modification-context'\n\nfunction placeRunningCounter(\n  scale,\n  counter,\n  position,\n  addModification,\n  incrementCounter\n) {\n  addModification({\n    position: {\n      x: position.x / scale,\n      y: position.y / scale\n    },\n    size: 20,\n    content: `{${counter}}`\n  })\n  incrementCounter()\n}\n\nfunction PdfViewportController({ children }) {\n  const { data, setData: setFileData } = useContext(FileContext)\n  const { scale } = useContext(ViewportContext)\n  const { counter, incrementCounter } = useContext(CounterContext)\n  const { modList, addMod: addModification } = useContext(ModificationContext)\n\n  return children({\n    data,\n    pageNum: 1,\n    scale,\n    overlayItems: modList,\n    onClick: (event, position) =>\n      placeRunningCounter(\n        scale,\n        counter,\n        position,\n        addModification,\n        incrementCounter\n      )\n  })\n}\n\nexport default PdfViewportController\n","import { Component } from 'react'\n\nclass EscKeyHandler extends Component {\n  componentDidMount() {\n    document.addEventListener('keyup', this.onKeyup, false)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.onKeyup, false)\n  }\n\n  onKeyup = event => {\n    if (['Escape', 'Esc'].includes(event.key)) {\n      this.props.onClick()\n    }\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport default EscKeyHandler\n","import React from 'react'\n\nimport ViewportStateProvider from '../../context/viewport-context'\nimport CounterProvider from '../../context/counter-context'\nimport ToolbarController from '../../containers/ToobarController/ToobarController'\nimport Toolbar from '../Toolbar/Toolbar'\nimport LoadDialogController from '../../containers/LoadDialogController/LoadDialogController'\nimport PdfLoader from '../PdfLoader/PdfLoader'\nimport PdfViewport from '../PdfRenderer/PdfViewport'\nimport PdfViewportController from '../../containers/PdfViewportController/PdfViewportController'\nimport EscKeyHandler from '../EscKeyHandler/EscKeyHandler'\nimport ModificationProvider from '../../context/modification-context'\n\nimport styles from './PdfEditor.module.css'\n\nfunction PdfEditor() {\n  console.log('[PdfEditor] render')\n\n  return (\n    <div className={styles.screenViewport}>\n      <h1>PDF Editor</h1>\n\n      <ViewportStateProvider>\n        <CounterProvider>\n          <ModificationProvider>\n            <div className={styles.editorArea}>\n              <LoadDialogController>\n                {loadDialogCtrl => (\n                  <React.Fragment>\n                    {loadDialogCtrl.isAtReload() ? (\n                      <EscKeyHandler onClick={loadDialogCtrl.closeDialog} />\n                    ) : null}\n\n                    <ToolbarController>\n                      {toolbarCtrl => (\n                        <Toolbar\n                          onLoad={loadDialogCtrl.openDialog}\n                          {...toolbarCtrl}\n                        />\n                      )}\n                    </ToolbarController>\n                    <div className={styles.pdfViewportArea}>\n                      {loadDialogCtrl.showDialog ? (\n                        <PdfLoader onLoad={loadDialogCtrl.onLoad} />\n                      ) : null}\n\n                      <PdfViewportController>\n                        {viewportCtrl => <PdfViewport {...viewportCtrl} />}\n                      </PdfViewportController>\n                    </div>\n                  </React.Fragment>\n                )}\n              </LoadDialogController>\n            </div>\n          </ModificationProvider>\n        </CounterProvider>\n      </ViewportStateProvider>\n    </div>\n  )\n}\n\nexport default PdfEditor\n","import React from 'react'\nimport './App.css'\n\nimport FileProvider from '../context/file-context'\nimport PdfEditor from '../components/PdfEditor/PdfEditor'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FileProvider>\n        <PdfEditor />\n      </FileProvider>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './containers/App'\nimport * as serviceWorker from './serviceWorker'\nimport pdfjs from '@bundled-es-modules/pdfjs-dist/build/pdf'\n\npdfjs.GlobalWorkerOptions.workerSrc =\n  'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.1.266/build/pdf.worker.min.js' // TODO: replace cdn with package worker\n// '@bundled-es-modules/pdfjs-dist/build/pdf.worker.min.js'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}